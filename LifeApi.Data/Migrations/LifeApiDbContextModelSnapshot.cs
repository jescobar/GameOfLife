// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LifeApi.Data.Migrations
{
    [DbContext(typeof(LifeApiDbContext))]
    partial class LifeApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LifeApi.Data.Entities.Board", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Boards");
                });

            modelBuilder.Entity("LifeApi.Data.Entities.BoardGeneration", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BoardId", "IsLatest")
                        .IsUnique()
                        .HasFilter("IsLatest = 1");

                    b.ToTable("BoardGenerations");
                });

            modelBuilder.Entity("LifeApi.Data.Entities.BoardState", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BoardStates");
                });

            modelBuilder.Entity("LifeApi.Data.Entities.Board", b =>
                {
                    b.OwnsOne("LifeApi.Data.Entities.BoardData", "Data", b1 =>
                        {
                            b1.Property<Guid>("BoardId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ActiveCells")
                                .HasColumnType("int");

                            b1.Property<int>("InactiveCells")
                                .HasColumnType("int");

                            b1.Property<bool>("IsErrorState")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsFinalState")
                                .HasColumnType("bit");

                            b1.Property<string>("Matrix")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BoardId");

                            b1.ToTable("Boards");

                            b1.ToJson("Data");

                            b1.WithOwner()
                                .HasForeignKey("BoardId");
                        });

                    b.Navigation("Data")
                        .IsRequired();
                });

            modelBuilder.Entity("LifeApi.Data.Entities.BoardGeneration", b =>
                {
                    b.HasOne("LifeApi.Data.Entities.Board", "ParentBoard")
                        .WithMany("Generations")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LifeApi.Data.Entities.BoardData", "Data", b1 =>
                        {
                            b1.Property<Guid>("BoardGenerationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("ActiveCells")
                                .HasColumnType("int");

                            b1.Property<int>("InactiveCells")
                                .HasColumnType("int");

                            b1.Property<bool>("IsErrorState")
                                .HasColumnType("bit");

                            b1.Property<bool>("IsFinalState")
                                .HasColumnType("bit");

                            b1.Property<string>("Matrix")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BoardGenerationId");

                            b1.ToTable("BoardGenerations");

                            b1.ToJson("Data");

                            b1.WithOwner()
                                .HasForeignKey("BoardGenerationId");
                        });

                    b.Navigation("Data")
                        .IsRequired();

                    b.Navigation("ParentBoard");
                });

            modelBuilder.Entity("LifeApi.Data.Entities.Board", b =>
                {
                    b.Navigation("Generations");
                });
#pragma warning restore 612, 618
        }
    }
}
